---
# tasks file for rootless-docker

- name: Copy iptables.conf over to load modules on startup
  become: true
  ansible.builtin.copy:
    src: iptables.conf
    dest: /etc/modules-load.d/iptables.conf

# Install docker via dnf
- name: dnf install rootless-docker tasks
  ansible.builtin.include_tasks:
    file: dnf.yml
  when: ansible_facts['pkg_mgr'] == "dnf"

  # Install docker via apt
- name: apt install rootless-docker tasks
  ansible.builtin.include_tasks:
    file: apt.yml
  when: ansible_facts['pkg_mgr'] == "apt"

- name: Add the networking modules
  become: true
  community.general.modprobe:
    name: "{{ item }}"
    state: present
  loop:
    - ip6_tables
    - ip6table_nat
    - ip_tables
    - iptable_nat
    - br_netfilter

- name: Get containerd defaults
  ansible.builtin.command:
    cmd: containerd config default
  when: docker_download.changed
  register: containerd_config

- name: Setup proper containerd config file based on defaults
  become: true
  ansible.builtin.copy:
    content: "{{ containerd_config.stdout }}"
    dest: /etc/containerd/config.toml
    owner: root
    group: root
    mode: "0644"
    backup: yes
  when: containerd_config.changed

- name: Enable sysctl bridge-nf-call-iptables
  become: true
  ansible.posix.sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: "1"
    sysctl_set: true
    state: present

- name: Enable sysctl bridge-nf-call-ip6tables
  become: true
  ansible.posix.sysctl:
    name: net.bridge.bridge-nf-call-ip6tables
    value: "1"
    sysctl_set: true
    state: present
    reload: true

- name: Run rootless docker install script
  ansible.builtin.command:
    cmd: dockerd-rootless-setuptool.sh install
  when: docker_download.changed

- name: Ensure group "docker" exists in case rootful docker needed
  become: true
  ansible.builtin.group:
    name: docker
    state: present

- name: Add the user to the "docker" group
  become: true
  ansible.builtin.user:
    name: "{{ ansible_facts['env']['USER'] }}"
    groups: docker
    append: yes

- name: Enable docker on startup
  become: true
  ansible.builtin.systemd_service:
    name: "{{ item }}"
    enabled: true
  loop:
    - containerd
    - docker
